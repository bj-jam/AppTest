apply plugin: 'com.android.application'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-android'
apply plugin: 'android-aspectjx'
allprojects {
    repositories {
        mavenCentral()
        jcenter()
        google()
        maven { url "https://jitpack.io" }
    }
}


def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}

buildscript {
    ext.kotlin_version = '1.3.50'
    repositories {
        mavenCentral()
        jcenter()
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.4.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.hujiang.aspectjx:gradle-android-plugin-aspectjx:2.0.0'
        /**
         * Error:android-apt plugin is incompatible with the Android Gradle plugin. Please use 'annotationProc
         * 一、注释掉module的buid.gradle下
         * apply plugin: 'com.neenbedankt.android-apt'
         *
         * 二、修改dependencies模块（注释掉了一句，添加了一句声明进程的方式）：
         * compile 'com.google.dagger:dagger:2.12'
         * //apt 'com.google.dagger:dagger-compiler:2.12'
         * annotationProcessor 'com.google.dagger:dagger-compiler:2.12'
         */
//        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.4'
        //集成热更新使用
        // tinkersupport插件, 其中lastest.release指拉取最新版本，也可以指定明确版本号，例如1.0.4
//        classpath "com.tencent.bugly:tinker-support:latest.release"
    }
}

dependencies {
    implementation fileTree(include: '*.jar', dir: 'libs')
    implementation files('libs/javabase64-1.3.1.jar')
    implementation files('libs/jbox2d-wd-2.3.1.jar')
    implementation 'com.android.support:support-v4:27.1.0'

    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support:cardview-v7:26.1.0'
    implementation 'com.squareup.picasso:picasso:2.71828'
    //圆形ImageView
    implementation 'de.hdodenhof:circleimageview:2.1.0'
    //圆角ImageView
    implementation 'com.makeramen:roundedimageview:2.3.0'
    //左滑删除listView
    implementation 'com.baoyz.swipemenulistview:library:1.3.0'
    implementation 'com.android.support:recyclerview-v7:26.1.0'
    //集成热更新使用
    // 远程依赖集成方式（推荐）
//    compile 'com.tencent.bugly:crashreport_upgrade:latest.release'
    //获取权限
    implementation 'com.lovedise:permissiongen:0.0.6'
    annotationProcessor 'com.zhy:mpermission-compiler:1.0.0'
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.47'
    implementation 'com.zhy:mpermission-api:1.0.0'
    implementation 'org.greenrobot:eventbus:3.0.0'
    implementation 'com.github.bumptech.glide:glide:3.7.0'
    implementation(name: 'SHLottie_v2.7.0', ext: 'aar')
    implementation 'top.zibin:Luban:1.1.8'
    implementation 'com.github.Wwq-Scofield:MultSelectImg:1.0.8'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation 'com.lcodecorex:tkrefreshlayout:1.0.3'
    implementation 'io.reactivex.rxjava2:rxjava:2.0.1'
    implementation 'com.aliyun.dpa:oss-android-sdk:+'
    implementation "org.reactivestreams:reactive-streams:1.0.2"


    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'android.arch.lifecycle:extensions:1.1.1'

    // retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.scwang.smartrefresh:SmartRefreshHeader:1.0.4'
    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.0.4'
    implementation 'com.github.zcweng:switch-button:0.0.3@aar'
    implementation 'com.facebook.rebound:rebound:0.3.8'
    implementation 'com.github.ctiao:DanmakuFlameMaster:0.9.25'
    implementation 'com.github.ctiao:ndkbitmap-armv7a:0.9.21'
    implementation 'com.google.zxing:core:3.3.0'
    implementation 'com.wkp:RandomLayout:1.0.3'
    implementation 'com.google.android:flexbox:0.2.6'
    implementation 'com.google.android:flexbox:0.3.0-alpha3'
    //新功能引导
    implementation 'com.binioter:guideview:1.0.0'
    implementation 'com.isanwenyu.highlight:highlight:1.8.0'

}

android {
    compileSdkVersion 26
    buildToolsVersion '28.0.3'
    sourceSets.main {
        jniLibs.srcDirs = ['libs']
        manifest.srcFile 'AndroidManifest.xml'
        java.srcDirs = ['src']
        resources.srcDirs = ['src']
        aidl.srcDirs = ['src']
        renderscript.srcDirs = ['src']
        res.srcDirs = ['res']
        assets.srcDirs = ['assets']
    }

    repositories {
        flatDir {
            dirs 'libs'
        }
    }

    dataBinding {
        enabled true
    }
    //打包的时候放开，studio2.3使用
//    applicationVariants.all { variant ->
//        variant.outputs.each { output ->
//            def outputFile = output.outputFile
//            if (outputFile != null && outputFile.name.endsWith('.apk')) {
//                def fileName = "App Version_${defaultConfig.versionName} Build_${releaseTime()}.apk"
//                output.outputFile = new File(outputFile.parent, fileName)
//            }
//        }
//    }
    //打包的时候放开，可以直接修改文件名字studio3.0使用
    android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "App Version_${defaultConfig.versionName} Build_${releaseTime()}.apk"
        }
    }

    useLibrary 'org.apache.http.legacy'
    defaultConfig {

        //支持的最低版本
        minSdkVersion 19
        //支持的目标版本
        targetSdkVersion 26
        multiDexEnabled true
        versionCode 126
        versionName "4.0.2"

//        ndk {
//            abiFilters "armeabi-v7a", "x86"
//        }
        //部分应用都不需要支持几十种上百种语言，所以在我们引用一些第三方库时（如Google、Facebook的库），
        // 它们往往带有上百种多语言资源，而大部分多语言对于我们自己的应用是没有用处的，我们只需要在build.gralde
        // 里面进行如下配置即可完成无用语言资源的删除，
        // 这样在打包的时候就会排除私有项目、android系统库和第三方库中非中文的资源文件了，效果还是比较显著的。
        // 只保留中文
        resConfigs "zh"
        // 下面代码解决5.0虚拟机上安卓失败Installation failed due to: ‘null’ 意思是安装失败原因是 空
        splits {
            abi {
                enable true
                reset()
                include "x86", "armeabi-v7a"
                universalApk true
            }
        }
    }
    // 打包配置
    // 解决jar内容重复
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE.txt'
    }
    // java版本
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    dexOptions {
        preDexLibraries = false
        javaMaxHeapSize "4g"
        jumboMode false
    }
//    signingConfigs {
//        release {
//            storeFile file("F:/debug.keystore")
//            storePassword "test"//密钥文件密码
//            keyAlias "test"//key别名
//            keyPassword "test"//key密码
//        }
//    }

    //    externalNativeBuild {
//        cmake {
//            path 'cpp/CMakeLists.txt'
//        }
//    }
//    tasks.whenTaskAdded { task ->
//        if (task.name.contains("lint")//如果instant run不生效，把clean这行干掉
//                || task.name.equals("clean")//项目中有用到aidl则不可以舍弃这个任务
//                || task.name.contains("Aidl")//用不到测试的时候就可以先关闭
//                || task.name.contains("mockableAndroidJar")
//                || task.name.contains("UnitTest")
//                || task.name.contains("AndroidTest")//用不到NDK和JNI的也关闭掉
//                || task.name.contains("Ndk")
//                || task.name.contains("Jni")
//        ) {
//            task.enabled = false
//        }
//    }
    //这个是解决lint报错的代码
    lintOptions {
        quiet true
        // if true, stop the gradle build if errors are found
        abortOnError false
        // if true, only report errors
        ignoreWarnings true
    }
    //关闭Android Studio的PNG合法性检查的
    aaptOptions.cruncherEnabled = false
    aaptOptions.useNewCruncher = false
    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        // Move the tests to tests/java, tests/res, etc...
        androidTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }
}
repositories {
    mavenCentral()
}

//集成热更新使用
// 依赖插件脚本
//apply from: 'tinker-support.gradle'
